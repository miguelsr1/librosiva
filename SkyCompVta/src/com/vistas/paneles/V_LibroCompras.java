/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.vistas.paneles;

import com.controles.dibujadorDeColumna.FechaRenderer;
import com.controles.dibujadorDeColumna.NumerosRenderer;
import com.controles.editorDeColumna.*;
import com.entidades.*;
import com.servicio.*;
import com.toedter.calendar.JTextFieldDateEditor;
import com.utilidades.AccesoAVtaPadre;
import com.utilidades.AdministradorEntidades;
import com.utilidades.OperacionMatematica;
import com.utilidades.OperacionesGUI;
import com.vistas.VtnaSuma;
import java.awt.EventQueue;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.beans.Beans;
import java.util.ArrayList;
import java.util.List;
import javax.persistence.RollbackException;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;

/**
 *
 * @author misanchez
 */
public class V_LibroCompras extends JPanel implements Persistencia {

    private float iva = 0f;

    public V_LibroCompras() {
        initComponents();

        if (!Beans.isDesignTime()) {
            if (!entityManager.getTransaction().isActive()) {
                entityManager.getTransaction().begin();
            }
        }

        ((JTextFieldDateEditor) fechaCompraDpker.getComponent(1)).addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                idDocCBox.requestFocus();
            }
        });

        OperacionesGUI.setRender(masterTable);

        masterTable.setCellEditor(1, new FechaEdit());
        masterTable.setCellRenderer(1, new FechaRenderer());

        DocumentoEdit doc = new DocumentoEdit(false);
        doc.setAutoscrolls(true);

        masterTable.setCellEditor(2, new DefaultCellEdit(false));
        masterTable.setCellEditor(3, new NumeroEdit(false, JTextField.LEFT));
        masterTable.setCellEditor(4, new OrganizacionEdit(2));
        masterTable.setCellEditor(7, new NumeroEdit(true, JTextField.RIGHT));
        masterTable.setCellEditor(8, new NumeroEdit(true, JTextField.RIGHT));
        masterTable.setCellEditor(9, new NumeroEdit(true, JTextField.RIGHT));
        masterTable.setCellEditor(10, new NumeroEdit(true, JTextField.RIGHT));
        masterTable.setCellEditor(11, new NumeroEdit(true, JTextField.RIGHT));
        masterTable.setCellEditor(12, new NumeroEdit(true, JTextField.RIGHT));
        masterTable.setCellEditor(13, new NumeroEdit(true, JTextField.RIGHT));
        masterTable.setCellEditor(14, new NumeroEdit(true, JTextField.RIGHT));
        masterTable.setCellEditor(15, new SucursalEdit(false));
        masterTable.setCellEditor(16, new ModalidadEdit());
        masterTable.setCellEditor(17, new NumeroEdit(true, JTextField.RIGHT));

        masterTable.setCellRenderer(7, new NumerosRenderer());
        masterTable.setCellRenderer(8, new NumerosRenderer());
        masterTable.setCellRenderer(9, new NumerosRenderer());
        masterTable.setCellRenderer(10, new NumerosRenderer());
        masterTable.setCellRenderer(11, new NumerosRenderer());
        masterTable.setCellRenderer(12, new NumerosRenderer());
        masterTable.setCellRenderer(13, new NumerosRenderer());
        masterTable.setCellRenderer(14, new NumerosRenderer());
        masterTable.setCellRenderer(17, new NumerosRenderer());

        masterTable.setColsMultiplicar("11=9,10");
        masterTable.setColsSumar("13=7+9+10+11+12");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        entityManager = AdministradorEntidades.getInstance().getEM();
        lstCompras = ServCompras.getListado();
        lstDocumento = ServDocumento.getListadoCompras();
        lstSucursal = ServSucursal.getListado();
        lstModalidad = ServModalidad.getListado();
        idCompraField = new com.controles.JXTextFiled();
        idCompraLabel = new javax.swing.JLabel();
        codigoSucursalLabel = new javax.swing.JLabel();
        idDocLabel = new javax.swing.JLabel();
        codigoOrgLabel = new javax.swing.JLabel();
        fechaCompraLabel = new javax.swing.JLabel();
        NCompCompraLabel = new javax.swing.JLabel();
        internaExentaLabel = new javax.swing.JLabel();
        importacionExentaLabel = new javax.swing.JLabel();
        internaGravadaLabel = new javax.swing.JLabel();
        importacionGravadaLabel = new javax.swing.JLabel();
        ivaCompraLabel = new javax.swing.JLabel();
        totalCompraLabel = new javax.swing.JLabel();
        retencionTerceroLabel = new javax.swing.JLabel();
        excluidoCompraLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        retencionTerceroLabel1 = new javax.swing.JLabel();
        codigoSucursalLabel1 = new javax.swing.JLabel();
        numCompraField = new com.controles.JXTextFiled();
        fechaCompraDpker = new com.toedter.calendar.JDateChooser();
        idDocCBox = new com.controles.JXComboBox();
        NCompCompraField = new com.controles.JXTextFiled();
        codigoOrgField = new com.controles.JXTextFiled();
        numRegOrgField = new com.controles.JXTextFiled();
        nomOrgField = new com.controles.JXTextFiled();
        internaExentaField = new com.controles.JXTextFiled();
        importacionExentaField = new com.controles.JXTextFiled();
        internaGravadaField = new com.controles.JXTextFiled();
        importacionGravadaField = new com.controles.JXTextFiled();
        ivaCompraField = new com.controles.JXTextFiled();
        excluidoCompraField = new com.controles.JXTextFiled();
        totalCompraField = new com.controles.JXTextFiled();
        retencionTerceroField = new com.controles.JXTextFiled();
        sucursalCBox = new com.controles.JXComboBox();
        modalidadCBox = new com.controles.JXComboBox();
        montoImpField = new com.controles.JXTextFiled();
        masterScrollPane = new javax.swing.JScrollPane();
        masterTable = new com.controles.JXTable();

        FormListener formListener = new FormListener();

        idCompraField.setNumero(true);

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.idCompra}"), idCompraField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceUnreadableValue(null);
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), idCompraField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        idCompraLabel.setText("Id:");

        codigoSucursalLabel.setText("Codigo Sucursal:");

        idDocLabel.setText("Documento:");

        codigoOrgLabel.setText("Cod. Proveedor:");

        fechaCompraLabel.setText("Fecha Compra:");

        NCompCompraLabel.setText("# Documento:");

        internaExentaLabel.setText("Locales Exentas:");

        importacionExentaLabel.setText("Import. Exentas:");

        internaGravadaLabel.setText("Locales Gravadas:");

        importacionGravadaLabel.setText("Import. Gravadas:");

        ivaCompraLabel.setText("Cr√©dito Fiscal:");

        totalCompraLabel.setText("Total Compras:");

        retencionTerceroLabel.setText("Ret. Terceros:");

        excluidoCompraLabel.setText("Excluidos Impuestos:");

        jLabel1.setText("Nom. Proveedor:");

        jLabel2.setText("# Registro:");

        jLabel3.setFont(new java.awt.Font("DejaVu Sans", 3, 11)); // NOI18N
        jLabel3.setText("Listado de Compras realizadas:");

        retencionTerceroLabel1.setText("Monto:");

        codigoSucursalLabel1.setText("Modalidad:");

        numCompraField.setNumero(true);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.numCompra}"), numCompraField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), numCompraField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        fechaCompraDpker.setDateFormatString("dd/MM/yyyy");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.fechaCompra}"), fechaCompraDpker, org.jdesktop.beansbinding.BeanProperty.create("date"));
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), fechaCompraDpker, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        org.jdesktop.swingbinding.JComboBoxBinding jComboBoxBinding = org.jdesktop.swingbinding.SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, lstDocumento, idDocCBox);
        bindingGroup.addBinding(jComboBoxBinding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.idDoc}"), idDocCBox, org.jdesktop.beansbinding.BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), idDocCBox, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.NCompCompra}"), NCompCompraField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceUnreadableValue(null);
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), NCompCompraField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), codigoOrgField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        codigoOrgField.addActionListener(formListener);

        numRegOrgField.setFocusable(false);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.codigoOrg.regIvaOrg}"), numRegOrgField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), numRegOrgField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        nomOrgField.setFocusable(false);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.codigoOrg.nombreOrg}"), nomOrgField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), nomOrgField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        internaExentaField.setDecimal(true);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.internaExenta}"), internaExentaField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceUnreadableValue(null);
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), internaExentaField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        importacionExentaField.setDecimal(true);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.importacionExenta}"), importacionExentaField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceUnreadableValue(null);
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), importacionExentaField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        internaGravadaField.setDecimal(true);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.internaGravada}"), internaGravadaField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceUnreadableValue(null);
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), internaGravadaField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        internaGravadaField.addFocusListener(formListener);

        importacionGravadaField.setDecimal(true);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.importacionGravada}"), importacionGravadaField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceUnreadableValue(null);
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), importacionGravadaField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        importacionGravadaField.addFocusListener(formListener);

        ivaCompraField.setDecimal(true);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.ivaCompra}"), ivaCompraField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceUnreadableValue(null);
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), ivaCompraField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        excluidoCompraField.setDecimal(true);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.excluidoCompra}"), excluidoCompraField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceUnreadableValue(null);
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), excluidoCompraField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        totalCompraField.setDecimal(true);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.totalCompra}"), totalCompraField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceUnreadableValue(null);
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), totalCompraField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        totalCompraField.addFocusListener(formListener);

        retencionTerceroField.setDecimal(true);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.retencionTercero}"), retencionTerceroField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceUnreadableValue(null);
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), retencionTerceroField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jComboBoxBinding = org.jdesktop.swingbinding.SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, lstSucursal, sucursalCBox);
        bindingGroup.addBinding(jComboBoxBinding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.codigoSucursal}"), sucursalCBox, org.jdesktop.beansbinding.BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), sucursalCBox, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jComboBoxBinding = org.jdesktop.swingbinding.SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, lstModalidad, modalidadCBox);
        bindingGroup.addBinding(jComboBoxBinding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.idModalidad}"), modalidadCBox, org.jdesktop.beansbinding.BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), modalidadCBox, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        montoImpField.setDecimal(true);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.montoImp}"), montoImpField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), montoImpField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, lstCompras, masterTable);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${numCompra}"));
        columnBinding.setColumnName("#");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${fechaCompra}"));
        columnBinding.setColumnName("Fecha Compra");
        columnBinding.setColumnClass(java.util.Date.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${idDoc}"));
        columnBinding.setColumnName("Documento");
        columnBinding.setColumnClass(com.entidades.Documento.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${NCompCompra}"));
        columnBinding.setColumnName("# Documento");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${codigoOrg}"));
        columnBinding.setColumnName("Cod Proveedor");
        columnBinding.setColumnClass(com.entidades.Organizacion.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${codigoOrg.regIvaOrg}"));
        columnBinding.setColumnName("# Registro");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${codigoOrg.nombreOrg}"));
        columnBinding.setColumnName("Nombre del Proveedor");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${internaExenta}"));
        columnBinding.setColumnName("Locales Exentas");
        columnBinding.setColumnClass(java.math.BigDecimal.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${importacionExenta}"));
        columnBinding.setColumnName("Import. Exentas");
        columnBinding.setColumnClass(java.math.BigDecimal.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${internaGravada}"));
        columnBinding.setColumnName("Locales Gravadas");
        columnBinding.setColumnClass(java.math.BigDecimal.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${importacionGravada}"));
        columnBinding.setColumnName("Import. Gravadas");
        columnBinding.setColumnClass(java.math.BigDecimal.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${ivaCompra}"));
        columnBinding.setColumnName("Cr√©dito Fiscal");
        columnBinding.setColumnClass(java.math.BigDecimal.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${excluidoCompra}"));
        columnBinding.setColumnName("Excluidos Impuestos");
        columnBinding.setColumnClass(java.math.BigDecimal.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${totalCompra}"));
        columnBinding.setColumnName("Total Compras");
        columnBinding.setColumnClass(java.math.BigDecimal.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${retencionTercero}"));
        columnBinding.setColumnName("Ret. Terceros");
        columnBinding.setColumnClass(java.math.BigDecimal.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${codigoSucursal}"));
        columnBinding.setColumnName("Sucursal");
        columnBinding.setColumnClass(com.entidades.Sucursal.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${idModalidad}"));
        columnBinding.setColumnName("Modalidad");
        columnBinding.setColumnClass(com.entidades.Modalidad.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${montoImp}"));
        columnBinding.setColumnName("Monto Imp");
        columnBinding.setColumnClass(java.math.BigDecimal.class);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        masterTable.addMouseListener(formListener);
        masterTable.addKeyListener(formListener);
        masterScrollPane.setViewportView(masterTable);
        masterTable.getColumnModel().getColumn(0).setPreferredWidth(40);
        masterTable.getColumnModel().getColumn(1).setPreferredWidth(100);
        masterTable.getColumnModel().getColumn(2).setPreferredWidth(120);
        masterTable.getColumnModel().getColumn(3).setPreferredWidth(120);
        masterTable.getColumnModel().getColumn(4).setPreferredWidth(120);
        masterTable.getColumnModel().getColumn(5).setPreferredWidth(110);
        masterTable.getColumnModel().getColumn(6).setPreferredWidth(250);
        masterTable.getColumnModel().getColumn(7).setPreferredWidth(110);
        masterTable.getColumnModel().getColumn(8).setPreferredWidth(110);
        masterTable.getColumnModel().getColumn(9).setPreferredWidth(110);
        masterTable.getColumnModel().getColumn(10).setPreferredWidth(110);
        masterTable.getColumnModel().getColumn(11).setPreferredWidth(110);
        masterTable.getColumnModel().getColumn(12).setPreferredWidth(130);
        masterTable.getColumnModel().getColumn(13).setPreferredWidth(110);
        masterTable.getColumnModel().getColumn(14).setPreferredWidth(110);
        masterTable.getColumnModel().getColumn(15).setPreferredWidth(120);
        masterTable.getColumnModel().getColumn(16).setPreferredWidth(120);
        masterTable.getColumnModel().getColumn(17).setPreferredWidth(110);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3)
                    .addComponent(masterScrollPane)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(idCompraLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(codigoOrgLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(internaExentaLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(internaGravadaLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(ivaCompraLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(totalCompraLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(codigoSucursalLabel1, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(internaExentaField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                                    .addComponent(codigoOrgField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(internaGravadaField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(ivaCompraField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(totalCompraField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(numCompraField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(24, 24, 24)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel2)
                                            .addComponent(importacionExentaLabel)
                                            .addComponent(importacionGravadaLabel)
                                            .addComponent(excluidoCompraLabel)
                                            .addComponent(retencionTerceroLabel)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(fechaCompraLabel))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(modalidadCBox, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 79, Short.MAX_VALUE)
                                .addComponent(retencionTerceroLabel1)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(retencionTerceroField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 129, Short.MAX_VALUE)
                                    .addComponent(excluidoCompraField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(montoImpField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 129, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(codigoSucursalLabel))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(numRegOrgField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 129, Short.MAX_VALUE)
                                    .addComponent(importacionExentaField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(importacionGravadaField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(fechaCompraDpker, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(52, 52, 52)
                                        .addComponent(jLabel1))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGap(80, 80, 80)
                                        .addComponent(idDocLabel)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(idDocCBox, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(NCompCompraLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(NCompCompraField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(nomOrgField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(sucursalCBox, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(idCompraLabel)
                        .addComponent(idDocLabel)
                        .addComponent(fechaCompraLabel)
                        .addComponent(NCompCompraLabel)
                        .addComponent(NCompCompraField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(idDocCBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(numCompraField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(fechaCompraDpker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(codigoOrgLabel)
                    .addComponent(codigoOrgField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(numRegOrgField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(nomOrgField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(internaExentaLabel)
                    .addComponent(internaExentaField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(importacionExentaLabel)
                    .addComponent(importacionExentaField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(internaGravadaLabel)
                        .addComponent(internaGravadaField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(importacionGravadaLabel)
                        .addComponent(importacionGravadaField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ivaCompraLabel)
                    .addComponent(ivaCompraField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(excluidoCompraLabel)
                    .addComponent(excluidoCompraField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(totalCompraLabel)
                    .addComponent(totalCompraField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(retencionTerceroLabel)
                    .addComponent(retencionTerceroField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(codigoSucursalLabel)
                    .addComponent(sucursalCBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(codigoSucursalLabel1)
                    .addComponent(modalidadCBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(retencionTerceroLabel1)
                    .addComponent(montoImpField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(masterScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        bindingGroup.bind();
    }

    // Code for dispatching events from components to event handlers.

    private class FormListener implements java.awt.event.ActionListener, java.awt.event.FocusListener, java.awt.event.KeyListener, java.awt.event.MouseListener {
        FormListener() {}
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            if (evt.getSource() == codigoOrgField) {
                V_LibroCompras.this.codigoOrgFieldActionPerformed(evt);
            }
        }

        public void focusGained(java.awt.event.FocusEvent evt) {
        }

        public void focusLost(java.awt.event.FocusEvent evt) {
            if (evt.getSource() == internaGravadaField) {
                V_LibroCompras.this.internaGravadaFieldFocusLost(evt);
            }
            else if (evt.getSource() == importacionGravadaField) {
                V_LibroCompras.this.importacionGravadaFieldFocusLost(evt);
            }
            else if (evt.getSource() == totalCompraField) {
                V_LibroCompras.this.totalCompraFieldFocusLost(evt);
            }
        }

        public void keyPressed(java.awt.event.KeyEvent evt) {
            if (evt.getSource() == masterTable) {
                V_LibroCompras.this.masterTableKeyPressed(evt);
            }
        }

        public void keyReleased(java.awt.event.KeyEvent evt) {
        }

        public void keyTyped(java.awt.event.KeyEvent evt) {
        }

        public void mouseClicked(java.awt.event.MouseEvent evt) {
            if (evt.getSource() == masterTable) {
                V_LibroCompras.this.masterTableMouseClicked(evt);
            }
        }

        public void mouseEntered(java.awt.event.MouseEvent evt) {
        }

        public void mouseExited(java.awt.event.MouseEvent evt) {
        }

        public void mousePressed(java.awt.event.MouseEvent evt) {
        }

        public void mouseReleased(java.awt.event.MouseEvent evt) {
        }
    }// </editor-fold>//GEN-END:initComponents

    private void codigoOrgFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_codigoOrgFieldActionPerformed
        List<Organizacion> lstOrg = ServOrganizacion.getListado(2, codigoOrgField.getText());

        if (!lstOrg.isEmpty()) {
            com.entidades.Compra compra = lstCompras.get(masterTable.convertRowIndexToModel(masterTable.getSelectedRow()));
            compra.setCodigoOrg(lstOrg.get(0));
            nomOrgField.setText(lstOrg.get(0).getNombreOrg());
            numRegOrgField.setText(lstOrg.get(0).getRegIvaOrg());
        } else {
            JOptionPane.showMessageDialog(this, "Este proveedor no esta registrado en el sistema", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_codigoOrgFieldActionPerformed

    private void internaGravadaFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_internaGravadaFieldFocusLost
        iva = OperacionMatematica.getResultadoMultiplicacionFloat(internaGravadaField, "0.".concat(System.getProperty("iva"))) + OperacionMatematica.getResultadoMultiplicacionFloat(importacionGravadaField, "0.".concat(System.getProperty("iva")));
        ivaCompraField.setText(String.valueOf(iva));
    }//GEN-LAST:event_internaGravadaFieldFocusLost

    private void totalCompraFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_totalCompraFieldFocusLost
        totalCompraField.setText(String.valueOf(OperacionMatematica.getResultadoSumaFloat(internaExentaField, internaGravadaField, importacionExentaField, importacionGravadaField,
                ivaCompraField, excluidoCompraField)));
    }//GEN-LAST:event_totalCompraFieldFocusLost

    private void masterTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_masterTableMouseClicked
        //((VtnaProceso) this.getParent().getParent().getParent().getParent()).setEnableBotonBorrar(deleteButton.isEnabled());

        com.entidades.Compra compra = lstCompras.get(masterTable.convertRowIndexToModel(masterTable.getSelectedRow()));
        if (compra.getCodigoOrg() != null) {
            codigoOrgField.setText(compra.getCodigoOrg().getCodigoOrg());
            nomOrgField.setText(compra.getCodigoOrg().getNombreOrg());
            numRegOrgField.setText(compra.getCodigoOrg().getRegIvaOrg());
        } else {
            limpiarOrg();
        }
    }//GEN-LAST:event_masterTableMouseClicked

    private void importacionGravadaFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_importacionGravadaFieldFocusLost
        iva = OperacionMatematica.getResultadoMultiplicacionFloat(internaGravadaField, "0.".concat(System.getProperty("iva"))) + OperacionMatematica.getResultadoMultiplicacionFloat(importacionGravadaField, "0.".concat(System.getProperty("iva")));
        ivaCompraField.setText(String.valueOf(iva));
    }//GEN-LAST:event_importacionGravadaFieldFocusLost

    private void masterTableKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_masterTableKeyPressed
    }//GEN-LAST:event_masterTableKeyPressed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.controles.JXTextFiled NCompCompraField;
    private javax.swing.JLabel NCompCompraLabel;
    private com.controles.JXTextFiled codigoOrgField;
    private javax.swing.JLabel codigoOrgLabel;
    private javax.swing.JLabel codigoSucursalLabel;
    private javax.swing.JLabel codigoSucursalLabel1;
    private javax.persistence.EntityManager entityManager;
    private com.controles.JXTextFiled excluidoCompraField;
    private javax.swing.JLabel excluidoCompraLabel;
    private com.toedter.calendar.JDateChooser fechaCompraDpker;
    private javax.swing.JLabel fechaCompraLabel;
    private com.controles.JXTextFiled idCompraField;
    private javax.swing.JLabel idCompraLabel;
    private com.controles.JXComboBox idDocCBox;
    private javax.swing.JLabel idDocLabel;
    private com.controles.JXTextFiled importacionExentaField;
    private javax.swing.JLabel importacionExentaLabel;
    private com.controles.JXTextFiled importacionGravadaField;
    private javax.swing.JLabel importacionGravadaLabel;
    private com.controles.JXTextFiled internaExentaField;
    private javax.swing.JLabel internaExentaLabel;
    private com.controles.JXTextFiled internaGravadaField;
    private javax.swing.JLabel internaGravadaLabel;
    private com.controles.JXTextFiled ivaCompraField;
    private javax.swing.JLabel ivaCompraLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private java.util.List<com.entidades.Compra> lstCompras;
    private java.util.List<com.entidades.Documento> lstDocumento;
    private java.util.List<com.entidades.Modalidad> lstModalidad;
    private java.util.List<com.entidades.Sucursal> lstSucursal;
    private javax.swing.JScrollPane masterScrollPane;
    private com.controles.JXTable masterTable;
    private com.controles.JXComboBox modalidadCBox;
    private com.controles.JXTextFiled montoImpField;
    private com.controles.JXTextFiled nomOrgField;
    private com.controles.JXTextFiled numCompraField;
    private com.controles.JXTextFiled numRegOrgField;
    private com.controles.JXTextFiled retencionTerceroField;
    private javax.swing.JLabel retencionTerceroLabel;
    private javax.swing.JLabel retencionTerceroLabel1;
    private com.controles.JXComboBox sucursalCBox;
    private com.controles.JXTextFiled totalCompraField;
    private javax.swing.JLabel totalCompraLabel;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    public static void main(String[] args) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(V_LibroCompras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(V_LibroCompras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(V_LibroCompras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(V_LibroCompras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                JFrame frame = new JFrame();
                frame.setContentPane(new V_LibroCompras());
                frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                frame.pack();
                frame.setVisible(true);
            }
        });
    }

    private boolean existeResgitro() {
        return false;
    }

    private void limpiarOrg() {
        /*codigoOrgField.setText("");
        nomOrgField.setText("");
        numRegOrgField.setText("");*/
    }

    @Override
    public void guardar() {
        if (!existeResgitro()) {
            try {
                entityManager.getTransaction().commit();
                entityManager.getTransaction().begin();
            } catch (RollbackException rex) {
                rex.printStackTrace();
                entityManager.getTransaction().rollback();
                entityManager.getTransaction().begin();
                List<com.entidades.Compra> merged = new ArrayList<com.entidades.Compra>(lstCompras.size());
                for (com.entidades.Compra c : lstCompras) {
                    merged.add(entityManager.merge(c));
                }
                lstCompras.clear();
                lstCompras.addAll(merged);
            } finally {
                //operacionNuevo(false);
            }
        }
    }

    @Override
    public void eliminar() {
        if (JOptionPane.showConfirmDialog(this, "¬øEsta seguro que desea eliminar este registro?",
                "Operaci√≥n de eliminaci√≥n", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE) == JOptionPane.YES_OPTION) {
            int[] selected = masterTable.getSelectedRows();
            List<com.entidades.Compra> toRemove = new ArrayList<com.entidades.Compra>(selected.length);
            for (int idx = 0; idx < selected.length; idx++) {
                com.entidades.Compra c = lstCompras.get(masterTable.convertRowIndexToModel(selected[idx]));
                c.setEliminado(true);
                toRemove.add(c);

                if (c.getIdCompra() != null) {
                    guardar();
                }
            }
            lstCompras.removeAll(toRemove);
        }

        limpiarOrg();
    }

    @Override
    public void actualizar() {
        limpiarOrg();

        entityManager.getTransaction().rollback();
        entityManager.getTransaction().begin();
        java.util.List<Compra> data = ServCompras.getListado();
        for (Compra compra : data) {
            entityManager.refresh(compra);
        }
        lstCompras.clear();
        lstCompras.addAll(data);

        //operacionNuevo(false);
    }

    @Override
    public void nuevo() {
        limpiarOrg();

        com.entidades.Compra cNew = new com.entidades.Compra();
        int num;
        if (masterTable.getRowCount() != 0) {
            num = lstCompras.get(masterTable.getRowCount() - 1).getNumCompra() + 1;
        } else {
            num = 1;
        }

        cNew.setNumCompra(num);
        cNew.setMesAnhoCompra(System.getProperty("mes").concat(System.getProperty("anho")));
        cNew.setIdUsuario(AccesoAVtaPadre.getUsuario());
        cNew.setIdModalidad((Modalidad) modalidadCBox.getSelectedItem());
        cNew.setCodigoSucursal((Sucursal) sucursalCBox.getSelectedItem());
        cNew.setCodigoOrg(entityManager.find(Organizacion.class, ""));
        cNew.setIdDoc(entityManager.find(Documento.class, 1));
        cNew.setEliminado(false);

        entityManager.persist(cNew);
        lstCompras.add(cNew);

        int row = lstCompras.size() - 1;
        masterTable.setRowSelectionInterval(row, row);
        masterTable.scrollRectToVisible(masterTable.getCellRect(row, 0, true));
        masterTable.requestFocus();
        masterTable.changeSelection(row, 1, false, false);
    }

    @Override
    public void suma() {
        VtnaSuma sum = new VtnaSuma(null, true);

        sum.add(new V_SumCompras());
        sum.pack();
        sum.setLocationRelativeTo(this);
        sum.setVisible(true);

        System.gc();
    }

    private Boolean enableEliminar = false;
    
    @Override
    public void setEnabledEliminar(Boolean eliminar) {
        this.enableEliminar = eliminar;
    }

    @Override
    public Boolean getEnabledEliminar() {
        return enableEliminar;
    }
}