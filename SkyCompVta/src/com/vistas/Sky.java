/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.vistas;

import com.controlador.HiloDePersistencia;
import com.controlador.HiloMensajeDeUsuario;
import com.entidades.Usuario;
import com.utilidades.AccesoAVtaPadre;
import com.utilidades.AdministradorEntidades;
import com.utilidades.BD;
import com.utilidades.Fechas;
import com.vistas.paneles.Persistencia;
import com.vistas.paneles.V_CsvCompras;
import com.vistas.paneles.V_Importacion;
import com.vistas.paneles.V_VtaConInconsistencias;
import java.awt.Component;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.IOException;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JSpinner.DefaultEditor;
import javax.swing.SpinnerListModel;

/**
 *
 * @author sanchez
 */
public class Sky extends javax.swing.JFrame {
    
    private HiloDePersistencia hiloPersistencia;
    private HiloMensajeDeUsuario hiloMsj;
    private Usuario usuario;
    private VtnaProceso vtna;

    /**
     * Creates new form Sky
     */
    public Sky() {
        initComponents();
        this.setExtendedState(JFrame.MAXIMIZED_BOTH);
        initParametros();
    }
    
    public Sky(Usuario usuario) {
        this.usuario = usuario;
        initComponents();
        this.setExtendedState(JFrame.MAXIMIZED_BOTH);
        initParametros();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mesMonthChooser = new com.toedter.calendar.JMonthChooser();
        anhoYearChooser = new com.toedter.calendar.JYearChooser();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        refrescarButton = new javax.swing.JButton();
        parametrosToolBar = new javax.swing.JToolBar();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        mes = new javax.swing.JSpinner();
        jLabel2 = new javax.swing.JLabel();
        anho = new javax.swing.JSpinner();
        jPanel2 = new javax.swing.JPanel();
        msjCargando = new javax.swing.JLabel();
        desktopPane = new javax.swing.JDesktopPane();
        menuBar = new javax.swing.JMenuBar();
        archivoMenu = new javax.swing.JMenu();
        exitMenuItem = new javax.swing.JMenuItem();
        manttoMenu = new javax.swing.JMenu();
        usuariosMenuItem = new javax.swing.JMenuItem();
        clienteMenuItem = new javax.swing.JMenuItem();
        proveedorMenuItem = new javax.swing.JMenuItem();
        procesosMenu = new javax.swing.JMenu();
        compraMenuItem = new javax.swing.JMenuItem();
        ventaFMenuItem = new javax.swing.JMenuItem();
        ventaCMenuItem = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        vtaConInconsistentesMenuItem = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        baseDeDatoMenu = new javax.swing.JMenu();
        generacionBKMenuItem = new javax.swing.JMenuItem();
        importarMenuItem = new javax.swing.JMenuItem();
        reportesMenu = new javax.swing.JMenu();
        libroCompraMenuItem = new javax.swing.JMenuItem();
        libroVentaFMenuItem = new javax.swing.JMenuItem();
        libroVentaCMenuItem = new javax.swing.JMenuItem();
        f987MenuItem = new javax.swing.JMenuItem();

        anhoYearChooser.setPreferredSize(new java.awt.Dimension(52, 24));

        jLabel3.setText("   ");

        jLabel4.setText("    ");

        refrescarButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/recursos/actualizar.png"))); // NOI18N
        refrescarButton.setFocusable(false);
        refrescarButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        refrescarButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        refrescarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refrescarButtonActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle(".::. SKY .::. Libros de I.V.A.");
        setIconImage(getIconImage());
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        parametrosToolBar.setFloatable(false);
        parametrosToolBar.setRollover(true);

        jLabel1.setText("Mes: ");

        mes.setModel(new javax.swing.SpinnerListModel(new String[] {"ENERO", "FEBRERO", "MARZO", "ABRIL", "MAYO", "JUNIO", "JULIO", "AGOSTO", "SEPTIEMBRE", "OCTUBRE", "NOVIEMBRE", "DICIEMBRE"}));
        mes.setFocusable(false);
        mes.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                mesStateChanged(evt);
            }
        });

        jLabel2.setText("AÃ±o: ");

        anho.setFocusable(false);
        anho.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                anhoStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mes, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(anho, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 358, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel1)
                .addComponent(mes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel2)
                .addComponent(anho, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        parametrosToolBar.add(jPanel1);

        jPanel2.setPreferredSize(new java.awt.Dimension(78, 20));

        msjCargando.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/recursos/cargando.gif"))); // NOI18N
        msjCargando.setText("Espere por favor...           ");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(msjCargando))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(msjCargando)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        parametrosToolBar.add(jPanel2);

        archivoMenu.setMnemonic('a');
        archivoMenu.setText("Archivo");

        exitMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/recursos/exit.png"))); // NOI18N
        exitMenuItem.setMnemonic('x');
        exitMenuItem.setText("Salir");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        archivoMenu.add(exitMenuItem);

        menuBar.add(archivoMenu);

        manttoMenu.setMnemonic('e');
        manttoMenu.setText("Matenimientos");

        usuariosMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/recursos/users.png"))); // NOI18N
        usuariosMenuItem.setMnemonic('t');
        usuariosMenuItem.setText("Usuario");
        usuariosMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usuariosMenuItemActionPerformed(evt);
            }
        });
        manttoMenu.add(usuariosMenuItem);

        clienteMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/recursos/clientes.png"))); // NOI18N
        clienteMenuItem.setMnemonic('y');
        clienteMenuItem.setText("Clientes");
        clienteMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clienteMenuItemActionPerformed(evt);
            }
        });
        manttoMenu.add(clienteMenuItem);

        proveedorMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/recursos/proveedor.png"))); // NOI18N
        proveedorMenuItem.setMnemonic('p');
        proveedorMenuItem.setText("Proveedores");
        proveedorMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                proveedorMenuItemActionPerformed(evt);
            }
        });
        manttoMenu.add(proveedorMenuItem);

        menuBar.add(manttoMenu);

        procesosMenu.setMnemonic('p');
        procesosMenu.setText("Procesos");

        compraMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/recursos/compra.png"))); // NOI18N
        compraMenuItem.setText("Libro de Compras");
        compraMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                compraMenuItemActionPerformed(evt);
            }
        });
        procesosMenu.add(compraMenuItem);

        ventaFMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/recursos/ventaF.png"))); // NOI18N
        ventaFMenuItem.setText("Libro de Ventas al Consumidor Final");
        ventaFMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ventaFMenuItemActionPerformed(evt);
            }
        });
        procesosMenu.add(ventaFMenuItem);

        ventaCMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/recursos/fatura.png"))); // NOI18N
        ventaCMenuItem.setText("Libro de Ventas al Contribuyente");
        ventaCMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ventaCMenuItemActionPerformed(evt);
            }
        });
        procesosMenu.add(ventaCMenuItem);
        procesosMenu.add(jSeparator1);

        vtaConInconsistentesMenuItem.setText("Ventas al contribuyente inconsistentes");
        vtaConInconsistentesMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vtaConInconsistentesMenuItemActionPerformed(evt);
            }
        });
        procesosMenu.add(vtaConInconsistentesMenuItem);
        procesosMenu.add(jSeparator2);

        baseDeDatoMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/recursos/server_database.png"))); // NOI18N
        baseDeDatoMenu.setMnemonic('b');
        baseDeDatoMenu.setText("Base de Datos");

        generacionBKMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/recursos/db_bk.png"))); // NOI18N
        generacionBKMenuItem.setText("GeneraciÃ³n de Respaldo");
        generacionBKMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generacionBKMenuItemActionPerformed(evt);
            }
        });
        baseDeDatoMenu.add(generacionBKMenuItem);

        procesosMenu.add(baseDeDatoMenu);

        importarMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/recursos/table-import.png"))); // NOI18N
        importarMenuItem.setText("ImportaciÃ³n de Datos");
        importarMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importarMenuItemActionPerformed(evt);
            }
        });
        procesosMenu.add(importarMenuItem);

        menuBar.add(procesosMenu);

        reportesMenu.setMnemonic('i');
        reportesMenu.setText("Informes");

        libroCompraMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/recursos/report3.png"))); // NOI18N
        libroCompraMenuItem.setText("Libro de Compras");
        libroCompraMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                libroCompraMenuItemActionPerformed(evt);
            }
        });
        reportesMenu.add(libroCompraMenuItem);

        libroVentaFMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/recursos/report1.png"))); // NOI18N
        libroVentaFMenuItem.setText("Libro de Ventas al Consumidor Final");
        libroVentaFMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                libroVentaFMenuItemActionPerformed(evt);
            }
        });
        reportesMenu.add(libroVentaFMenuItem);

        libroVentaCMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/recursos/report2.png"))); // NOI18N
        libroVentaCMenuItem.setText("Libro de Ventas al Contribuyente");
        libroVentaCMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                libroVentaCMenuItemActionPerformed(evt);
            }
        });
        reportesMenu.add(libroVentaCMenuItem);

        f987MenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/recursos/csv.png"))); // NOI18N
        f987MenuItem.setText("ExportaciÃ³n CSV");
        f987MenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                f987MenuItemActionPerformed(evt);
            }
        });
        reportesMenu.add(f987MenuItem);

        menuBar.add(reportesMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(desktopPane)
            .addComponent(parametrosToolBar, javax.swing.GroupLayout.DEFAULT_SIZE, 749, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(parametrosToolBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(desktopPane, javax.swing.GroupLayout.DEFAULT_SIZE, 279, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        //ServiceDB.stopServiceDB();
        System.exit(0);
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void usuariosMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usuariosMenuItemActionPerformed
        hiloPersistencia.setOperacion(hiloMsj, "Usuarios", "users.png", 1);
    }//GEN-LAST:event_usuariosMenuItemActionPerformed

    private void clienteMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clienteMenuItemActionPerformed
        hiloPersistencia.setOperacion(hiloMsj, "Clientes", "clientes.png", 2, 1);
    }//GEN-LAST:event_clienteMenuItemActionPerformed

    private void proveedorMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_proveedorMenuItemActionPerformed
        hiloPersistencia.setOperacion(hiloMsj, "Proveedores", "proveedor.png", 3, 2);
    }//GEN-LAST:event_proveedorMenuItemActionPerformed

    private void compraMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_compraMenuItemActionPerformed
        hiloPersistencia.setOperacion(hiloMsj, "Libro de Compras", "compra.png", 4);
    }//GEN-LAST:event_compraMenuItemActionPerformed

    private void ventaFMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ventaFMenuItemActionPerformed
        hiloPersistencia.setOperacion(hiloMsj, "Libro de Ventas al Consumidor Final", "ventaF.png", 5);
    }//GEN-LAST:event_ventaFMenuItemActionPerformed

    private void ventaCMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ventaCMenuItemActionPerformed
        hiloPersistencia.setOperacion(hiloMsj, "Libro de Ventas al Contribuyente", "fatura.png", 6);
    }//GEN-LAST:event_ventaCMenuItemActionPerformed

    private void refrescarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refrescarButtonActionPerformed
        System.setProperty("mes", String.valueOf((mesMonthChooser.getMonth() + 1)));
        System.setProperty("anho", String.valueOf(anhoYearChooser.getYear()));
    }//GEN-LAST:event_refrescarButtonActionPerformed

    private void libroCompraMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_libroCompraMenuItemActionPerformed
        hiloPersistencia.setOperacion(hiloMsj, 7);
    }//GEN-LAST:event_libroCompraMenuItemActionPerformed

    private void libroVentaFMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_libroVentaFMenuItemActionPerformed
        hiloPersistencia.setOperacion(hiloMsj, 8);
    }//GEN-LAST:event_libroVentaFMenuItemActionPerformed

    private void libroVentaCMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_libroVentaCMenuItemActionPerformed
        hiloPersistencia.setOperacion(hiloMsj, 9);
    }//GEN-LAST:event_libroVentaCMenuItemActionPerformed

    private void importarMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importarMenuItemActionPerformed
        V_Importacion imp = new V_Importacion(this, true);
        imp.setIconImage(getIconImage());
        imp.setTitle("ImportaciÃ³n de datos");
        imp.setLocationRelativeTo(this);
        imp.setVisible(true);
    }//GEN-LAST:event_importarMenuItemActionPerformed

    private void generacionBKMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generacionBKMenuItemActionPerformed
        BD baseDatos = new BD(this.getLayeredPane(), 1);
        JFileChooser file = new JFileChooser();
        file.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int result = file.showOpenDialog(this);

        if (result == JFileChooser.APPROVE_OPTION) {
            baseDatos.setPath(file.getSelectedFile().getPath());
            baseDatos.start();
        }
    }//GEN-LAST:event_generacionBKMenuItemActionPerformed

    private void f987MenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_f987MenuItemActionPerformed
        V_CsvCompras csvCompra = new V_CsvCompras(this, true);
        csvCompra.setLocationRelativeTo(this);
        csvCompra.setVisible(true);
    }//GEN-LAST:event_f987MenuItemActionPerformed

    private void mesStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_mesStateChanged
        System.setProperty("mes", Fechas.getNumeroMesPorNombre(mes.getValue().toString()));
        System.setProperty("anho", anho.getValue().toString());
    }//GEN-LAST:event_mesStateChanged

    private void anhoStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_anhoStateChanged
        System.setProperty("mes", Fechas.getNumeroMesPorNombre(mes.getValue().toString()));
        System.setProperty("anho", anho.getValue().toString());
    }//GEN-LAST:event_anhoStateChanged

    private void vtaConInconsistentesMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vtaConInconsistentesMenuItemActionPerformed
        V_VtaConInconsistencias vtaInconsistentes = new V_VtaConInconsistencias();
        vtaInconsistentes.setVisible(true);
        desktopPane.add(vtaInconsistentes);
    }//GEN-LAST:event_vtaConInconsistentesMenuItemActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                new Sky().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSpinner anho;
    private com.toedter.calendar.JYearChooser anhoYearChooser;
    private javax.swing.JMenu archivoMenu;
    private javax.swing.JMenu baseDeDatoMenu;
    private javax.swing.JMenuItem clienteMenuItem;
    private javax.swing.JMenuItem compraMenuItem;
    private javax.swing.JDesktopPane desktopPane;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JMenuItem f987MenuItem;
    private javax.swing.JMenuItem generacionBKMenuItem;
    private javax.swing.JMenuItem importarMenuItem;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JMenuItem libroCompraMenuItem;
    private javax.swing.JMenuItem libroVentaCMenuItem;
    private javax.swing.JMenuItem libroVentaFMenuItem;
    private javax.swing.JMenu manttoMenu;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JSpinner mes;
    private com.toedter.calendar.JMonthChooser mesMonthChooser;
    private javax.swing.JLabel msjCargando;
    private javax.swing.JToolBar parametrosToolBar;
    private javax.swing.JMenu procesosMenu;
    private javax.swing.JMenuItem proveedorMenuItem;
    private javax.swing.JButton refrescarButton;
    private javax.swing.JMenu reportesMenu;
    private javax.swing.JMenuItem usuariosMenuItem;
    private javax.swing.JMenuItem ventaCMenuItem;
    private javax.swing.JMenuItem ventaFMenuItem;
    private javax.swing.JMenuItem vtaConInconsistentesMenuItem;
    // End of variables declaration//GEN-END:variables

    @Override
    public Image getIconImage() {
        Image retValue = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("com/recursos/skylogo.jpg"));

        return retValue;
    }

    public void setVisibleVtna(String titulo, String nameIcono, Persistencia panel) {        
        vtna.setTitle(titulo);
        vtna.setIcono(nameIcono);
        vtna.setPanel(panel);
        vtna.setEnableBotonBorrar(panel.getEnabledEliminar());
        vtna.pack();

        vtna.setLocationRelativeTo(this);
        vtna.setVisible(true);
    }

    public void addDesktopPane(Component frame) {
        desktopPane.add(frame);
    }

    private void initParametros() {
        java.util.Properties prop = new Properties();
        try {
            setModelAnho();
            prop.load(this.getClass().getResourceAsStream("/com/propiedades/sky.properties"));

            System.setProperty("mes", prop.getProperty("mes"));
            System.setProperty("anho", prop.getProperty("anho"));
            System.setProperty("iva", prop.getProperty("iva"));

            ((SpinnerListModel) mes.getModel()).setValue(Fechas.getNombreMes(String.valueOf(mesMonthChooser.getMonth() + 1)));
            ((SpinnerListModel) anho.getModel()).setValue(String.valueOf(anhoYearChooser.getYear()));

            ((DefaultEditor) mes.getEditor()).getTextField().setEditable(false);
            ((DefaultEditor) anho.getEditor()).getTextField().setEditable(false);
            
            vtna = new VtnaProceso(this, true);
            
            hiloMsj = new HiloMensajeDeUsuario();
            hiloPersistencia = new HiloDePersistencia();
            
            setMsjLoading(false);
            
            AccesoAVtaPadre.setVtaPadre(this);
        } catch (IOException ex) {
            AdministradorEntidades.getInstance().cerrarEM();
            JOptionPane.showMessageDialog(AccesoAVtaPadre.vtaPadre, "Error en la leectura del archivo de propiedades.\n\nCola de Error: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(Sky.class.getName()).log(Level.SEVERE, null, ex);
            System.exit(0);
        } catch (Exception e) {
            AdministradorEntidades.getInstance().cerrarEM();
            JOptionPane.showMessageDialog(AccesoAVtaPadre.vtaPadre, "Error en la leectura del archivo de propiedades.\n\nCola de Error: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(Sky.class.getName()).log(Level.SEVERE, null, e);
            System.exit(0);
        }
    }

    private void setModelAnho() {
        String[] anhos = new String[50];
        int a = 2007;
        for (int i = 0; i < anhos.length; i++) {
            anhos[i] = String.valueOf(a);
            a++;
        }

        anho.setModel(new javax.swing.SpinnerListModel(anhos));
    }
    
    public void setMsjLoading(boolean visible){
        msjCargando.setVisible(visible);
    }

    public HiloMensajeDeUsuario getHiloMsjUsuario() {
        return hiloMsj;
    }
    
    public Usuario getUsuario(){
        return usuario;
    }
    
    public static void Run(final Usuario usuario){
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                Sky sky = new Sky(usuario);
                sky.setVisible(true);
            }
        });
    }
}